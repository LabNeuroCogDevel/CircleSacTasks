function [newInstructions,betweenInstructions,endStructions] = getWMInstructions(keys,block,totalblock)
  % set the instructions (in their own function for easy tracking/editing
  % with git
  % each element of a cell is a new screen
  %
    function dircue(w,dir)
        drawWMArrow(w,dir);
        Screen('Flip',w);
    end

    function fixation(w)
        global DLYFIXINC
        drawCross(w,[ 256 256 0 ],DLYFIXINC)
        Screen('Flip',w);
    end

    function ITI(w)
        drawCross(w,[ 256 256 256 ],1)
        Screen('Flip',w);
    end

    function drawDots(lPos,rPos,lColor,rColor,w)
        global colors degsize gridsize;
        colorswgray= [colors; [1 1 1]*0];
        var = Screen('Rect',w);
        offset = (var([3,4]) - (gridsize.*degsize))/2;
        
        % pick a position and color
        posArr=[generateCirclePosns(lPos, offset), ...
                generateCirclePosns(rPos,offset,6) ];
        colorArr= [colorswgray(lColor,:);...
                   colorswgray(rColor,:) ]';
        
        drawCross(w);
        Screen('FillOval',w,colorArr,posArr);
        Screen('Flip',w);
    end

    lborder=ones(21,1)*7;
    rborder=lborder;
    lborder([1:3,19:21,4,7,10,13,16])=1;
    rborder([1:3,19:21,3,6,9,12,15,18])=1;
  
    keystext = [ '  Push your ' keys{1} ' if the dots are the SAME color \n\n'...
                 '  Push your ' keys{2} ' if they CHANGED \n'];
    
    % display instructions
    newInstructions = { ...
        @(w) drawDots(0:20,0:20,lborder,rborder, w ), ...
        'Welcome to the Working Memory Game!\n', ...
        [...
         'To play this game,\n'...
         'always focus on the center cross. \n\n', ...
         ], ...
        [...
         'You will see an arrow pointing left or right.\n', ...
        ] ,...
        [...
         'If the arrow points left, attend to the left side of the cross .\n', ...
         ...%arrow underneath pointing to left
        ],...
         [...
         'If the arrow points right, attend to the right side of the cross.\n', ...
         ...%arrow underneath pointing to right
        ],...
        [...
         'After you see the arrow, circles will appear on both sides of the cross. \n',...
         'Remember the colors on the side of the screen previously indicated by the arrow. \n, ...
        ], ...
        @(w) drawDots(15,10,2,4,w), ...
        [...
         'These circles will then disappear and new circles will appear in the same locations.\n', ...
         ],...
        @(w) drawDots(15,10,1,4,w), ...
         [...
          'Did any color change on the side you were focusing on? \n', ...
          If the colors are the same, press your ' keys{1}'.\n', ...
          'If the colors are different, press your 'keys{2}'.\n,...
         ],...
         [...
          'Try to respond as quickly and as accurately as possible. \n'...
         ], ...
         ...
         ...
         ... FOUR LOAD TRIAL EXAMPLE
         ...
         ...
         ['Lets Look at another example!\n'  ...
          'In this example you will see four dots.'], ...
         @(w) dircue(w,2), ...
         @(w) drawDots([0 2 15 20],[ 5 9 17 20], [ 1 2 3 4], [ 6 5 2 4],w), ...
         @fixation,...
         @(w) drawDots([0 2 15 20],[ 5 9 17 20], [ 1 2 3 4], [ 6 5 2 4],w),...
         [ 'Did the colors change?'], ...
         [ 'No change, you should push ',keys{1} ], ...
         [...
          'Sometimes trials will end early\n\n', ...
          'For example, you will see the arrow, then four dots, a yellow cross, and then the trial ends.\n'...
          'When you see a white cross, forget the colors of the previous dots\n',...
          'and get ready to memorize the colors of new dots.'...
         ], ...
         ...
         ...
         ... CATCH TRIAL EXAMPLE
         ...
         ...
         @(w) dircue(w,2), ...
         @(w) drawDots([0],[9], [ 3 ], [ 6 ],w), ...
         @fixation,...
         ...
         @ITI,...
         @(w) dircue(w,1), ...
         @(w) drawDots([13],[19], [ 5 ], [ 2 ],w), ...
         @fixation,...
         @(w) drawDots([13],[19], [ 1 ], [ 2 ],w), ...              
         [ 'After ignoring the first colors, you should have seen a change\n'...
           'and pushed ' keys{2} '\n\n' ], ...
         'Remember: \n It is important for us that your gaze always stays at the center of the screen'...
        };
    
    betweenInstructions = { [ ...
                             'Welcome Back\n\n', ...
                              keystext, ...
                              '\n\nRemember: \n It is important for us that your gaze always stays at the center of the screen'...
                             ]
                          }; 
                      
    endStructions       = {['You finished block ' num2str(block) ...
                            '\n' num2str(totalblock-block) ' more to go!'...
                            '\nThanks for playing']};
      
end
