function [newInstructions,betweenInstructions,endStructions] = getWMInstructions(keys,block,totalblock)
  % set the instructions (in their own function for easy tracking/editing
  % with git
  % each element of a cell is a new screen
  %

    lborder=ones(21,1)*7;
    rborder=lborder;
    lborder([1:3,19:21,4,7,10,13,16])=1;
    rborder([1:3,19:21,3,6,9,12,15,18])=1;
  
    keystext = [ '  Push your ' keys{1} ' if the dots are the SAME color \n\n'...
                 '  Push your ' keys{2} ' if they CHANGED \n'];
    
    % display instructions
    newInstructions = { ...
        @(w) fullTrial(w,1,[1;19], [5;2], [1;2] ), ...
        @(w) drawDots(0:20,0:20,lborder,rborder, w ), ...
        'Welcome to the Working Memory Game!\n', ...
        [...
         'To play this game,\n'...
         'always focus on the center cross. \n\n', ...
         ], ...
        [...
         'You will see an arrow pointing left or right.\n', ...
        ] ,...
        [...
         'If the arrow points left, attend to the left side of the cross .\n', ...
         ...%arrow underneath pointing to left
        ],...
        [...
         'If the arrow points right, attend to the right side of the cross.\n', ...
         ...%arrow underneath pointing to right
        ],...
        [...
         'After you see the arrow, circles will appear on both sides of the cross. \n',...
         'Remember the colors on the side of the screen previously indicated by the arrow. \n', ...
        ], ...
        @(w) drawDots(15,10,2,4,w), ...
        'These circles will then disappear and new circles will appear in the same locations.\n', ...
        @(w) drawDots(15,10,1,4,w), ...
         [...
          'Did any color change on the side you were focusing on? \n', ...
          'If the colors are the same, press your ' keys{1} '.\n', ...
          'If the colors are different, press your ' keys{2}' '.\n',...
         ],...
         [...
          'Try to respond as quickly and as accurately as possible. \n'...
         ], ...
         ...
         ...
         ... FOUR LOAD TRIAL EXAMPLE
         ...
         ...  fullTrial(w,dir,[lpos;rpos],[lcol;rcol],[lcol2;rcol2])
         @(w) fullTrial(w,1,[1;19], [5;2], [1;2] ), ...
         ...
         ...
         ...
         ... CATCH TRIAL EXAMPLE
         ...
         ...
         @(w) dircue(w,2), ...
         @(w) drawDots([0],[9], [ 3 ], [ 6 ],w), ...
         @fixation,...
         ...
         @ITI,...
         @(w) dircue(w,1), ...
         @(w) drawDots([13],[19], [ 5 ], [ 2 ],w), ...
         @fixation,...
         @(w) drawDots([13],[19], [ 1 ], [ 2 ],w), ...              
         [ 'After ignoring the first colors, you should have seen a change\n'...
           'and pushed ' keys{2} '\n\n' ], ...
         'Remember: \n It is important for us that your gaze always stays at the center of the screen'...
        };
    
    betweenInstructions = { [ ...
                             'Welcome Back\n\n', ...
                              keystext, ...
                              '\n\nRemember: \n It is important for us that your gaze always stays at the center of the screen'...
                             ]
                          }; 
                      
    endStructions       = {['You finished block ' num2str(block) ...
                            '\n' num2str(totalblock-block) ' more to go!'...
                            '\nThanks for playing']};
      
end



    function dircue(w,dir)
        drawWMArrow(w,dir);
        Screen('Flip',w);
    end

    function fixation(w)
        global DLYFIXINC
        drawCross(w,[ 256 256 0 ],DLYFIXINC)
        Screen('Flip',w);
    end

    function ITI(w)
        global FIXCOLOR
        drawCross(w,FIXCOLOR,1)
        Screen('Flip',w);
    end

    function drawDots(lPos,rPos,lColor,rColor,w)
        global colors degsize gridsize;
        colorswgray= [colors; [1 1 1]*0];
        var = Screen('Rect',w);
        offset = (var([3,4]) - (gridsize.*degsize))/2;
        
        % pick a position and color
        posArr=[generateCirclePosns(lPos, offset), ...
                generateCirclePosns(rPos,offset,6) ];
        colorArr= [colorswgray(lColor,:);...
                   colorswgray(rColor,:) ]';
        
        drawCross(w);
        Screen('FillOval',w,colorArr,posArr);
        Screen('Flip',w);
    end

    function fullTrial(w,dir,pos,col,col2)
        %      fix-> cue-> isi->  memory->  delay->  probe->  finish
        %        .5    .2     .4       .2        1      2 
        %         1     2      3       4         5      6
        global TIMES;
        
        % get individual pos/color
        lpos=pos(1,:);
        rpos=pos(2,:);
        lcol=col(1,:);
        rcol=col(2,:);
        lcol2=col2(1,:);
        rcol2=col2(2,:);
        
        
        % ITI
        ITI(w)
        WaitSecs(TIMES(1));
        
        % cue
        dircue(w,dir);
        WaitSecs(TIMES(2));
        
        % isi
        drawCross(w);
        WaitSecs(TIMES(3));
        
        % mem array
        drawDots(lpos,rpos,lcol,rcol,w);
        WaitSecs(TIMES(4))
        
        % dly
        fixation(w);
        WaitSecs(TIMES(5));     
        
        % probe array
        drawDots(lpos,rpos,lcol2,rcol2,w);
        KbWait(); % while GetSecs-GetSecs<TIMES(6)
        
    end